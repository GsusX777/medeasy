# „Der Herr, unser Gott, lasse uns freundlich ansehen. Lass unsere Arbeit nicht vergeblich sein – ja, lass gelingen, was wir tun!" Psalm 90,17

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "medeasy-ai-service"
version = "0.1.0"
description = "MedEasy AI Service for medical transcription and anonymization"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "Proprietary" }
authors = [
    { name = "MedEasy Team" }
]

# [AIU] Anonymization is MANDATORY and cannot be disabled
# [PK] Provider chain with multiple fallbacks
# [MLB] Multi-Language Bridge via gRPC
# [DSC] Swiss data protection compliance
dependencies = [
    # Core dependencies
    "fastapi>=0.104.1",
    "uvicorn>=0.23.2",
    "pydantic>=2.4.2",
    "python-dotenv>=1.0.0",
    
    # gRPC for .NET integration [MLB]
    "grpcio>=1.59.0",
    "grpcio-tools>=1.59.0",
    "protobuf>=4.24.4",
    
    # Whisper transcription [WMM]
    "openai-whisper>=20231117",
    "torch>=2.1.0",
    "torchaudio>=2.1.0",
    
    # Anonymization [AIU]
    "presidio-analyzer>=2.2.33",
    "presidio-anonymizer>=2.2.33",
    "spacy>=3.7.2",
    
    # AI Providers [PK]
    "openai>=1.3.5",
    "anthropic>=0.5.0",
    "google-generativeai>=0.3.1",
    
    # Security & Logging [ATV] [SP]
    "cryptography>=41.0.5",
    "python-jose>=3.3.0",
    "structlog>=23.2.0",
    
    # System utilities
    "psutil>=5.9.5",
]

[project.optional-dependencies]
dev = [
    # Testing [KP100]
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.1",
    
    # Code quality
    "black>=23.10.1",
    "isort>=5.12.0",
    "mypy>=1.6.1",
    "pylint>=3.0.2",
    "flake8>=6.1.0",
]

[project.urls]
"Documentation" = "https://medeasy.docs/ai-service"
"Source" = "https://github.com/medeasy/ai-service"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
markers = [
    "unit: marks unit tests",
    "integration: marks integration tests",
    "security: marks security-critical tests [KP100]",
]
addopts = "--cov=src --cov-report=term --cov-report=xml:coverage.xml"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
