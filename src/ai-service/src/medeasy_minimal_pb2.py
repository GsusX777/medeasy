# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: medeasy_minimal.proto
# Protobuf Python Version: 5.28.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    1,
    '',
    'medeasy_minimal.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15medeasy_minimal.proto\x12\x07medeasy\"/\n\x19GetAvailableModelsRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\"v\n\x1aGetAvailableModelsResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12)\n\x06models\x18\x02 \x03(\x0b\x32\x19.medeasy.WhisperModelInfo\x12\x19\n\x11recommended_model\x18\x03 \x01(\t\"\xcc\x01\n\x10WhisperModelInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x14\n\x0cis_available\x18\x02 \x01(\x08\x12\x15\n\ris_downloaded\x18\x03 \x01(\x08\x12\x0f\n\x07size_mb\x18\x04 \x01(\x05\x12\x1b\n\x13supported_languages\x18\x05 \x03(\t\x12\x13\n\x0b\x64\x65scription\x18\x06 \x01(\t\x12\x1e\n\x16\x65stimated_speed_factor\x18\x07 \x01(\x01\x12\x1a\n\x12recommended_ram_gb\x18\x08 \x01(\x01\",\n\x16GetHardwareInfoRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\"\xd0\x01\n\x17GetHardwareInfoResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x16\n\x0e\x63uda_available\x18\x02 \x01(\x08\x12\x0e\n\x06ram_gb\x18\x03 \x01(\x01\x12\"\n\x08\x63pu_info\x18\x04 \x01(\x0b\x32\x10.medeasy.CpuInfo\x12\x0f\n\x07vram_gb\x18\x05 \x01(\x01\x12\x11\n\tcpu_cores\x18\x06 \x01(\x05\x12\x1e\n\x16total_system_memory_gb\x18\x07 \x01(\x01\x12\x11\n\ttimestamp\x18\x08 \x01(\x03\"n\n\x07\x43puInfo\x12\x16\n\x0ephysical_cores\x18\x01 \x01(\x05\x12\x15\n\rlogical_cores\x18\x02 \x01(\x05\x12\x19\n\x11\x63urrent_cpu_usage\x18\x03 \x01(\x01\x12\x19\n\x11\x63urrent_memory_mb\x18\x04 \x01(\x01\"\xa1\x02\n\x14TranscriptionRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x12\n\naudio_data\x18\x02 \x01(\x0c\x12\x14\n\x0c\x61udio_format\x18\x03 \x01(\t\x12\x15\n\rwhisper_model\x18\x04 \x01(\t\x12\x10\n\x08language\x18\x05 \x01(\t\x12\x1c\n\x14\x61udio_length_seconds\x18\x06 \x01(\x01\x12\x15\n\rlanguage_code\x18\x07 \x01(\t\x12\x12\n\nsession_id\x18\x08 \x01(\t\x12\x1b\n\x13\x64\x65tect_swiss_german\x18\t \x01(\x08\x12\x1e\n\x16\x61llow_cloud_processing\x18\n \x01(\x08\x12\x1c\n\x14\x63onsultation_context\x18\x0b \x01(\t\"\xf3\x01\n\x15TranscriptionResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\x12\x15\n\roriginal_text\x18\x03 \x01(\t\x12\x15\n\rlanguage_code\x18\x04 \x01(\t\x12\x1f\n\x17processing_time_seconds\x18\x05 \x01(\x01\x12\x17\n\x0f\x63loud_processed\x18\x06 \x01(\x08\x12\x17\n\x0fis_swiss_german\x18\x07 \x01(\x08\x12\x1c\n\x14swiss_german_warning\x18\x08 \x01(\x08\x12\x19\n\x11\x64\x65tected_entities\x18\t \x03(\t\"\xfd\x01\n\x16\x42\x65nchmarkModelsRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x17\n\x0ftest_audio_data\x18\x02 \x01(\x0c\x12\x14\n\x0c\x61udio_format\x18\x03 \x01(\t\x12\x16\n\x0emodels_to_test\x18\x04 \x03(\t\x12\x12\n\niterations\x18\x05 \x01(\x05\x12\x10\n\x08language\x18\x06 \x01(\t\x12\x1d\n\x15\x65nable_cuda_benchmark\x18\x07 \x01(\x08\x12\x1c\n\x14\x65nable_cpu_benchmark\x18\x08 \x01(\x08\x12%\n\x1d\x65nable_swiss_german_detection\x18\t \x01(\x08\"\x83\x02\n\x17\x42\x65nchmarkModelsResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x14\n\x0c\x62\x65nchmark_id\x18\x02 \x01(\t\x12\x1f\n\x17total_benchmark_time_ms\x18\x03 \x01(\x03\x12.\n\x07results\x18\x04 \x03(\x0b\x32\x1d.medeasy.ModelBenchmarkResult\x12\x37\n\rhardware_info\x18\x05 \x01(\x0b\x32 .medeasy.GetHardwareInfoResponse\x12\x34\n\x0erecommendation\x18\x06 \x01(\x0b\x32\x1c.medeasy.ModelRecommendation\"\xed\x01\n\x13ModelRecommendation\x12\x19\n\x11recommended_model\x18\x01 \x01(\t\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12\x12\n\nconfidence\x18\x03 \x01(\x01\x12#\n\x1brecommended_for_performance\x18\x04 \x01(\t\x12 \n\x18recommended_for_accuracy\x18\x05 \x01(\t\x12\x1f\n\x17recommended_for_balance\x18\x06 \x01(\t\x12\x11\n\treasoning\x18\x07 \x01(\t\x12\x1c\n\x14hardware_limitations\x18\x08 \x03(\t\"\xfa\x03\n\x14ModelBenchmarkResult\x12\x12\n\nmodel_name\x18\x01 \x01(\t\x12\x1f\n\x17processing_time_seconds\x18\x02 \x01(\x01\x12\x18\n\x10\x63onfidence_score\x18\x03 \x01(\x01\x12\x18\n\x10transcribed_text\x18\x04 \x01(\t\x12\x0f\n\x07success\x18\x05 \x01(\x08\x12\x15\n\rerror_message\x18\x06 \x01(\t\x12\"\n\x1a\x61verage_processing_time_ms\x18\x07 \x01(\x03\x12\x1e\n\x16min_processing_time_ms\x18\x08 \x01(\x03\x12\x1e\n\x16max_processing_time_ms\x18\t \x01(\x03\x12\x18\n\x10\x61verage_accuracy\x18\n \x01(\x01\x12\x1a\n\x12\x61verage_confidence\x18\x0b \x01(\x01\x12\x11\n\tcuda_used\x18\x0c \x01(\x08\x12\x19\n\x11\x61verage_cpu_usage\x18\r \x01(\x01\x12\x19\n\x11\x61verage_gpu_usage\x18\x0e \x01(\x01\x12\x1c\n\x14\x61verage_ram_usage_mb\x18\x0f \x01(\x03\x12\x1d\n\x15\x61verage_vram_usage_mb\x18\x10 \x01(\x03\x12\x19\n\x11performance_score\x18\x11 \x01(\x05\x12\x16\n\x0e\x61\x63\x63uracy_score\x18\x12 \x01(\x05\x32\xf0\x02\n\x0eMedEasyService\x12_\n\x12GetAvailableModels\x12\".medeasy.GetAvailableModelsRequest\x1a#.medeasy.GetAvailableModelsResponse\"\x00\x12V\n\x0fGetHardwareInfo\x12\x1f.medeasy.GetHardwareInfoRequest\x1a .medeasy.GetHardwareInfoResponse\"\x00\x12M\n\nTranscribe\x12\x1d.medeasy.TranscriptionRequest\x1a\x1e.medeasy.TranscriptionResponse\"\x00\x12V\n\x0f\x42\x65nchmarkModels\x12\x1f.medeasy.BenchmarkModelsRequest\x1a .medeasy.BenchmarkModelsResponse\"\x00\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'medeasy_minimal_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_GETAVAILABLEMODELSREQUEST']._serialized_start=34
  _globals['_GETAVAILABLEMODELSREQUEST']._serialized_end=81
  _globals['_GETAVAILABLEMODELSRESPONSE']._serialized_start=83
  _globals['_GETAVAILABLEMODELSRESPONSE']._serialized_end=201
  _globals['_WHISPERMODELINFO']._serialized_start=204
  _globals['_WHISPERMODELINFO']._serialized_end=408
  _globals['_GETHARDWAREINFOREQUEST']._serialized_start=410
  _globals['_GETHARDWAREINFOREQUEST']._serialized_end=454
  _globals['_GETHARDWAREINFORESPONSE']._serialized_start=457
  _globals['_GETHARDWAREINFORESPONSE']._serialized_end=665
  _globals['_CPUINFO']._serialized_start=667
  _globals['_CPUINFO']._serialized_end=777
  _globals['_TRANSCRIPTIONREQUEST']._serialized_start=780
  _globals['_TRANSCRIPTIONREQUEST']._serialized_end=1069
  _globals['_TRANSCRIPTIONRESPONSE']._serialized_start=1072
  _globals['_TRANSCRIPTIONRESPONSE']._serialized_end=1315
  _globals['_BENCHMARKMODELSREQUEST']._serialized_start=1318
  _globals['_BENCHMARKMODELSREQUEST']._serialized_end=1571
  _globals['_BENCHMARKMODELSRESPONSE']._serialized_start=1574
  _globals['_BENCHMARKMODELSRESPONSE']._serialized_end=1833
  _globals['_MODELRECOMMENDATION']._serialized_start=1836
  _globals['_MODELRECOMMENDATION']._serialized_end=2073
  _globals['_MODELBENCHMARKRESULT']._serialized_start=2076
  _globals['_MODELBENCHMARKRESULT']._serialized_end=2582
  _globals['_MEDEASYSERVICE']._serialized_start=2585
  _globals['_MEDEASYSERVICE']._serialized_end=2953
# @@protoc_insertion_point(module_scope)
